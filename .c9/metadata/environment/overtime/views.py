{"filter":false,"title":"views.py","tooltip":"/overtime/views.py","undoManager":{"mark":10,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":35},"action":"remove","lines":["from django.shortcuts import render"],"id":2},{"start":{"row":0,"column":0},"end":{"row":8,"column":43},"action":"insert","lines":["from django.shortcuts import render, redirect, get_object_or_404","from django.contrib.auth.decorators import login_required","from django.contrib import messages","from django.conf import settings","from .models import AllowancesRequest, NonScheduledOvertimeRequest, ShortOvertime, OvertimePerQtr, AvailabilitySheet, ShortTermAvailabilty, Overtime","from .forms import AllowancesRequestForm, NonScheduledOvertimeRequestForm, RejectAllowanceRequestForm, RejectNSOTForm, AvailabilitySheetForm, AssignOvertimeDateForm, AssignRecallStaffForm, AssignRequireStaffForm","import datetime","from annual_leave.utils import getLeaveAmount","from .utils import getQtrDateIn, getNextQtr"]}],[{"start":{"row":11,"column":0},"end":{"row":13,"column":48},"action":"insert","lines":["@login_required()","def overtime_page(request):","    return render(request, \"overtime_page.html\")"],"id":3}],[{"start":{"row":13,"column":48},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":14,"column":4},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "],"id":5}],[{"start":{"row":15,"column":0},"end":{"row":20,"column":144},"action":"insert","lines":["@login_required()","def allowances_page(request):","    user = request.user","    allowance_requests = AllowancesRequest.objects.filter(allow_req_off_id=user.pk)","    len_allowance_requests = len(allowance_requests)","    return render(request, \"allowances_page.html\", {'allowance_requests': allowance_requests, 'len_allowance_requests': len_allowance_requests})"],"id":6}],[{"start":{"row":20,"column":144},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]},{"start":{"row":21,"column":4},"end":{"row":22,"column":0},"action":"insert","lines":["",""]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"remove","lines":["    "],"id":8}],[{"start":{"row":22,"column":0},"end":{"row":69,"column":103},"action":"insert","lines":["@login_required()","def submit_allowance_request(request):","    if request.method == \"POST\":","        allowance_req_form = AllowancesRequestForm(request.POST, request.FILES)","        if allowance_req_form.is_valid():","            allowance_req_form.instance.allow_req_off_id = request.user","            if allowance_req_form.instance.claiming_food_for_prisoner_expense == True:","                if allowance_req_form.instance.food_for_prisoner_amount is None:","                    messages.error(request, \"You must include the cost of the prisoner's meal to claim this expense.\")","                    return render(request, \"submit_allowance_request.html\", {'allowance_req_form': allowance_req_form})","                elif allowance_req_form.instance.receipt_for_prisoner_food is False:","                    messages.error(request, \"You must provide a photograph of the receipt for the prisoner's meal to claim this expense.\")","                    return render(request, \"submit_allowance_request.html\", {'allowance_req_form': allowance_req_form})","                else:","                    allowance_request = allowance_req_form.save()","                    total_claim_amount = 0.0","                    if allowance_request.claiming_breakfast_allowance == True:","                        total_claim_amount += settings.BREAKFAST_ALLOWANCE","                    if allowance_request.claiming_dinner_allowance == True:","                        total_claim_amount += settings.DINNER_ALLOWANCE","                    if allowance_request.claiming_tea_allowance == True:","                        total_claim_amount += settings.TEA_ALLOWANCE","                    if allowance_request.claiming_plain_clothes_allowance == True:","                        total_claim_amount += settings.PLAIN_CLOTHES_ALLOWANCE","                    if allowance_request.claiming_food_for_prisoner_expense == True:","                        total_claim_amount += allowance_request.food_for_prisoner_amount","                    allowance_request.claim_total = total_claim_amount","                    allowance_request.save()","                    return redirect(view_allowance_request, allowance_request.pk)","            else:","                allowance_request = allowance_req_form.save()","                total_claim_amount = 0.0","                if allowance_request.claiming_breakfast_allowance == True:","                    total_claim_amount += settings.BREAKFAST_ALLOWANCE","                if allowance_request.claiming_dinner_allowance == True:","                    total_claim_amount += settings.DINNER_ALLOWANCE","                if allowance_request.claiming_tea_allowance == True:","                    total_claim_amount += settings.TEA_ALLOWANCE","                if allowance_request.claiming_plain_clothes_allowance == True:","                    total_claim_amount += settings.PLAIN_CLOTHES_ALLOWANCE","                if allowance_request.claiming_food_for_prisoner_expense == True:","                    total_claim_amount += allowance_request.food_for_prisoner_amount","                allowance_request.claim_total = total_claim_amount","                allowance_request.save()","                return redirect(view_allowance_request, allowance_request.pk)","    else:","        allowance_req_form = AllowancesRequestForm()","    return render(request, \"submit_allowance_request.html\", {'allowance_req_form': allowance_req_form})"],"id":9}],[{"start":{"row":69,"column":103},"end":{"row":70,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"insert","lines":["    "]},{"start":{"row":70,"column":4},"end":{"row":71,"column":0},"action":"insert","lines":["",""]},{"start":{"row":71,"column":0},"end":{"row":71,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":71,"column":0},"end":{"row":71,"column":4},"action":"remove","lines":["    "],"id":11}],[{"start":{"row":71,"column":0},"end":{"row":75,"column":99},"action":"insert","lines":["@login_required()    ","def view_allowance_request(request, pk):","    allow_req_to_view = get_object_or_404(AllowancesRequest, pk=pk)","    allow_req_to_view.save()","    return render(request, \"view_allowance_request.html\", {'allow_req_to_view': allow_req_to_view})"],"id":12}]]},"ace":{"folds":[],"scrolltop":695,"scrollleft":0,"selection":{"start":{"row":75,"column":99},"end":{"row":75,"column":99},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1605865510781,"hash":"e3614bb172530d21d043e78f55ad706943b4af1e"}