{"filter":false,"title":"views.py","tooltip":"/overtime/views.py","undoManager":{"mark":34,"position":34,"stack":[[{"start":{"row":508,"column":98},"end":{"row":509,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":509,"column":0},"end":{"row":509,"column":4},"action":"insert","lines":["    "]},{"start":{"row":509,"column":4},"end":{"row":510,"column":0},"action":"insert","lines":["",""]},{"start":{"row":510,"column":0},"end":{"row":510,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":510,"column":0},"end":{"row":510,"column":4},"action":"remove","lines":["    "],"id":3}],[{"start":{"row":510,"column":0},"end":{"row":524,"column":132},"action":"insert","lines":["@login_required()","def submit_st_availability(request):","    if request.method == \"POST\":","        short_term_availability_form = ShortTermAvailabilityForm(request.POST, request.FILES)","        st_availability_date = request.POST.get('st_availability_date')","        short_term_availability_form.fields['st_availability_date'].choices = [(st_availability_date, st_availability_date)]","        if short_term_availability_form.is_valid():","            short_term_availability_form.instance.st_availability_off_id = request.user","            short_term_availability_form.instance.st_availability_qtr_id = getQtrDateIn(short_term_availability_form.instance.st_availability_date)","            short_term_availability_submission = short_term_availability_form.save()","            messages.success(request, \"Short Term Availability successfully submitted.\")","            return redirect(availability_page)","    else:","        short_term_availability_form = ShortTermAvailabilityForm()","    return render(request, \"submit_st_availability_submission.html\", {'short_term_availability_form': short_term_availability_form})"],"id":4}],[{"start":{"row":5,"column":211},"end":{"row":5,"column":212},"action":"insert","lines":[","],"id":5}],[{"start":{"row":5,"column":212},"end":{"row":5,"column":213},"action":"insert","lines":[" "],"id":6}],[{"start":{"row":5,"column":213},"end":{"row":5,"column":238},"action":"insert","lines":["ShortTermAvailabilityForm"],"id":7}],[{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":[" "],"id":8},{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":["a"]},{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"insert","lines":["s"]}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":[" "],"id":9},{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"insert","lines":["d"]},{"start":{"row":6,"column":20},"end":{"row":6,"column":21},"action":"insert","lines":["t"]}],[{"start":{"row":284,"column":41},"end":{"row":284,"column":42},"action":"remove","lines":["e"],"id":10},{"start":{"row":284,"column":40},"end":{"row":284,"column":41},"action":"remove","lines":["m"]},{"start":{"row":284,"column":39},"end":{"row":284,"column":40},"action":"remove","lines":["i"]},{"start":{"row":284,"column":38},"end":{"row":284,"column":39},"action":"remove","lines":["t"]},{"start":{"row":284,"column":37},"end":{"row":284,"column":38},"action":"remove","lines":["e"]},{"start":{"row":284,"column":36},"end":{"row":284,"column":37},"action":"remove","lines":["t"]},{"start":{"row":284,"column":35},"end":{"row":284,"column":36},"action":"remove","lines":["a"]}],[{"start":{"row":284,"column":35},"end":{"row":284,"column":36},"action":"insert","lines":["t"],"id":11}],[{"start":{"row":285,"column":39},"end":{"row":285,"column":40},"action":"remove","lines":["e"],"id":12},{"start":{"row":285,"column":38},"end":{"row":285,"column":39},"action":"remove","lines":["m"]},{"start":{"row":285,"column":37},"end":{"row":285,"column":38},"action":"remove","lines":["i"]},{"start":{"row":285,"column":36},"end":{"row":285,"column":37},"action":"remove","lines":["t"]},{"start":{"row":285,"column":35},"end":{"row":285,"column":36},"action":"remove","lines":["e"]},{"start":{"row":285,"column":34},"end":{"row":285,"column":35},"action":"remove","lines":["t"]},{"start":{"row":285,"column":33},"end":{"row":285,"column":34},"action":"remove","lines":["a"]}],[{"start":{"row":285,"column":33},"end":{"row":285,"column":34},"action":"insert","lines":["t"],"id":13}],[{"start":{"row":524,"column":132},"end":{"row":525,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":525,"column":0},"end":{"row":525,"column":4},"action":"insert","lines":["    "]},{"start":{"row":525,"column":4},"end":{"row":526,"column":0},"action":"insert","lines":["",""]},{"start":{"row":526,"column":0},"end":{"row":526,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":526,"column":0},"end":{"row":526,"column":4},"action":"remove","lines":["    "],"id":15}],[{"start":{"row":526,"column":0},"end":{"row":531,"column":38},"action":"insert","lines":["@login_required()","def delete_st_availability_submission(request, pk):","    st_avail_submission_for_deletion = ShortTermAvailabilty.objects.get(pk=pk)","    st_avail_submission_for_deletion.delete()","    messages.success(request, \"You have successfully deleted this short-term availability submission.\")","    return redirect(availability_page)"],"id":16}],[{"start":{"row":5,"column":238},"end":{"row":5,"column":239},"action":"insert","lines":[","],"id":17}],[{"start":{"row":5,"column":239},"end":{"row":5,"column":240},"action":"insert","lines":[" "],"id":18}],[{"start":{"row":5,"column":240},"end":{"row":5,"column":265},"action":"insert","lines":["AssignShortTermOTDateForm"],"id":19}],[{"start":{"row":531,"column":38},"end":{"row":532,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":532,"column":0},"end":{"row":532,"column":4},"action":"insert","lines":["    "]},{"start":{"row":532,"column":4},"end":{"row":533,"column":0},"action":"insert","lines":["",""]},{"start":{"row":533,"column":0},"end":{"row":533,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":533,"column":0},"end":{"row":533,"column":4},"action":"remove","lines":["    "],"id":21}],[{"start":{"row":533,"column":0},"end":{"row":551,"column":104},"action":"insert","lines":["@login_required()","def assign_st_ot_date(request):","    if request.method == \"POST\":","        assign_st_ot_date_form = AssignShortTermOTDateForm(request.POST, request.FILES)","        if assign_st_ot_date_form.is_valid():","            todays_date = dt.date.today()","            one_day_delta = dt.timedelta(days=1)","            st_window_start = todays_date + one_day_delta","            thirteen_day_delta = dt.timedelta(days=13)","            short_term_window_end = todays_date + thirteen_day_delta","            chosen_st_date = assign_st_ot_date_form.cleaned_data.get(\"date_for_st_assignment\")","            if chosen_st_date < st_window_start or chosen_st_date > short_term_window_end:","                messages.error(request, \"The date you have selected is not within the short term recall window.\")","                return render(request, \"assign_st_ot_date.html\", {'assign_st_ot_date_form': assign_st_ot_date_form})","            else:","                return redirect(assign_st_ot_recall, chosen_st_date)","    else:","        assign_st_ot_date_form = AssignShortTermOTDateForm()","    return render(request, \"assign_st_ot_date.html\", {'assign_st_ot_date_form': assign_st_ot_date_form})"],"id":22}],[{"start":{"row":5,"column":265},"end":{"row":5,"column":266},"action":"insert","lines":[","],"id":23}],[{"start":{"row":5,"column":266},"end":{"row":5,"column":267},"action":"insert","lines":[" "],"id":24}],[{"start":{"row":5,"column":267},"end":{"row":5,"column":297},"action":"insert","lines":["AssignShortTermRecallStaffForm"],"id":25}],[{"start":{"row":551,"column":104},"end":{"row":552,"column":0},"action":"insert","lines":["",""],"id":26},{"start":{"row":552,"column":0},"end":{"row":552,"column":4},"action":"insert","lines":["    "]},{"start":{"row":552,"column":4},"end":{"row":553,"column":0},"action":"insert","lines":["",""]},{"start":{"row":553,"column":0},"end":{"row":553,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":553,"column":0},"end":{"row":553,"column":4},"action":"remove","lines":["    "],"id":27}],[{"start":{"row":553,"column":0},"end":{"row":574,"column":142},"action":"insert","lines":["@login_required()","def assign_st_ot_recall(request, chosen_st_date):","    st_date_selected = chosen_st_date","    if request.method == \"POST\":","        assign_st_recall_form = AssignShortTermRecallStaffForm(request.POST, request.FILES, initial={'selected_st_date': st_date_selected})","        officers_available = request.POST.get('officers_available')","        #len_available_officers = available_officers.count()","        assign_st_recall_form.fields['officers_available'].choices = [(officers_available, officers_available)]","        if assign_st_recall_form.is_valid():","            officer = assign_st_recall_form.cleaned_data.get(\"officers_available\")","            officer_instance = getOfficerInstance(officer)","            date = assign_st_recall_form.cleaned_data.get(\"selected_st_date\")","            quarter = getQtrDateIn(date)","            shift = assign_st_recall_form.cleaned_data.get(\"assign_shift\")","            new_overtime = Overtime(ot_officer_id=officer_instance, ot_qtr_id=quarter, ot_date=date, ot_shift_id=shift, ot_recall=True)","            new_overtime.save()","            #NOTIFICATION TO STAFF MEMBER OF SHORT TERM RECALL","            messages.success(request, \"Staff successfully recalled in the short-term.\")","            return redirect(overtime_page)","    else:","        assign_st_recall_form = AssignShortTermRecallStaffForm(initial = {'selected_st_date': st_date_selected})","    return render(request, \"assign_st_ot_recall.html\", {'assign_st_recall_form': assign_st_recall_form, 'st_date_selected': st_date_selected})"],"id":28}],[{"start":{"row":5,"column":297},"end":{"row":5,"column":298},"action":"insert","lines":[","],"id":29}],[{"start":{"row":5,"column":298},"end":{"row":5,"column":299},"action":"insert","lines":[" "],"id":30}],[{"start":{"row":5,"column":299},"end":{"row":5,"column":330},"action":"insert","lines":["AssignShortTermRequireStaffForm"],"id":31}],[{"start":{"row":574,"column":142},"end":{"row":575,"column":0},"action":"insert","lines":["",""],"id":32},{"start":{"row":575,"column":0},"end":{"row":575,"column":4},"action":"insert","lines":["    "]},{"start":{"row":575,"column":4},"end":{"row":576,"column":0},"action":"insert","lines":["",""]},{"start":{"row":576,"column":0},"end":{"row":576,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":576,"column":0},"end":{"row":576,"column":4},"action":"remove","lines":["    "],"id":33}],[{"start":{"row":576,"column":0},"end":{"row":597,"column":107},"action":"insert","lines":["@login_required()","def assign_st_ot_require(request, st_date_selected):","    date_for_st_require = st_date_selected","    #print(date_for_require)","    if request.method == \"POST\":","        assign_st_require_form = AssignShortTermRequireStaffForm(request.POST, request.FILES, initial = {'selected_st_require_date': date_for_st_require})","        officers_for_require = request.POST.get('officers_for_require')","        assign_st_require_form.fields['officers_for_require'].choices = [(officers_for_require, officers_for_require)]","        if assign_st_require_form.is_valid():","            officer = assign_st_require_form.cleaned_data.get(\"officers_for_require\")","            officer_instance = getOfficerInstance(officer)","            date = assign_st_require_form.cleaned_data.get(\"selected_st_require_date\")","            quarter = getQtrDateIn(date)","            shift = assign_st_require_form.cleaned_data.get(\"assign_require_shift\")","            new_overtime = Overtime(ot_officer_id=officer_instance, ot_qtr_id=quarter, ot_date=date, ot_shift_id=shift, ot_requirement=True)","            new_overtime.save()","            #Notification that staff member has been required.","            messages.success(request, \"Staff successfully required in the short-term.\")","            return redirect(overtime_page)","    else:","        assign_st_require_form = AssignShortTermRequireStaffForm(initial = {'selected_st_require_date': date_for_st_require})","    return render(request, \"assign_st_ot_require.html\", {'assign_st_require_form': assign_st_require_form})"],"id":34}],[{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"remove","lines":["e"],"id":35},{"start":{"row":18,"column":24},"end":{"row":18,"column":25},"action":"remove","lines":["m"]},{"start":{"row":18,"column":23},"end":{"row":18,"column":24},"action":"remove","lines":["i"]},{"start":{"row":18,"column":22},"end":{"row":18,"column":23},"action":"remove","lines":["t"]},{"start":{"row":18,"column":21},"end":{"row":18,"column":22},"action":"remove","lines":["e"]},{"start":{"row":18,"column":20},"end":{"row":18,"column":21},"action":"remove","lines":["t"]},{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"remove","lines":["a"]}],[{"start":{"row":18,"column":19},"end":{"row":18,"column":20},"action":"insert","lines":["t"],"id":36}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":18,"column":20},"end":{"row":18,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1615234132031,"hash":"70289199e326bbd96d9bd5a6aa9087a7adc7f194"}